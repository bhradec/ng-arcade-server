{"version":3,"sources":["./src/app/shared/services/games-users.service.ts","./src/app/user-profile/user-profile.component.ts","./src/app/user-profile/user-profile.component.html","./src/app/administration/administration.component.ts","./src/app/administration/administration.component.html","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/shared/services/comment.service.ts","./src/app/new-comment/new-comment.component.ts","./src/app/new-comment/new-comment.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/shared/other/auth-guard.ts","./src/environments/environment.ts","./src/app/main-navigation/main-navigation.component.ts","./src/app/main-navigation/main-navigation.component.html","./src/app/game-library/game-library.component.ts","./src/app/game-library/game-library.component.html","./src/app/route-not-found/route-not-found.component.ts","./src/app/route-not-found/route-not-found.component.html","./src/app/add-game-author/add-game-author.component.ts","./src/app/add-game-author/add-game-author.component.html","./src/app/game-profile/game-profile.component.ts","./src/app/game-profile/game-profile.component.html","./src/app/secondary-navigation/secondary-navigation.component.ts","./src/app/secondary-navigation/secondary-navigation.component.html","./src/app/edit-game-author/edit-game-author.component.ts","./src/app/edit-game-author/edit-game-author.component.html","./src/app/shared/services/auth.service.ts","./src/app/shared/models/user.model.ts","./src/app/shared/services/game-author.service.ts","./src/app/shared/services/game.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/comment/comment.component.ts","./src/app/comment/comment.component.html","./src/app/game-tile/game-tile.component.ts","./src/app/game-tile/game-tile.component.html","./src/app/app.module.ts","./src/app/game-author-profile/game-author-profile.component.ts","./src/app/game-author-profile/game-author-profile.component.html","./src/app/shared/models/game-author.model.ts","./src/app/edit-game/edit-game.component.ts","./src/app/edit-game/edit-game.component.html","./src/app/shared/other/admin-guard.ts","./src/app/comments/comments.component.ts","./src/app/comments/comments.component.html","./src/app/shared/services/data.service.ts","./src/app/shared/services/user.service.ts","./src/app/shared/enums/user-levels.ts","./src/app/shared/models/comment.model.ts","./src/app/manage-game-authors/manage-game-authors.component.ts","./src/app/manage-game-authors/manage-game-authors.component.html","./src/app/manage-games/manage-games.component.ts","./src/app/manage-games/manage-games.component.html","./src/app/shared/other/password-mismatch-validator.ts","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/add-game/add-game.component.ts","./src/app/add-game/add-game.component.html","./src/app/logo/logo.component.ts","./src/app/logo/logo.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { GameUser } from '../models/game-user.model';\nimport { DataService } from './data.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class GamesUsersService {\n    gamesUsers: GameUser[] = [];\n    gamesUsersChangeSubject: BehaviorSubject<GameUser[]> = new BehaviorSubject(this.gamesUsers);\n\n    constructor(private dataService: DataService) {\n        this.syncWithDb();\n    }\n\n    syncWithDb() {\n        this.dataService.getGamesPlayedByUsers()\n            .subscribe((res: { status: number, description?: string, gamesUsers: GameUser[] }) => {\n                this.gamesUsers = res.gamesUsers;\n                /* Iz baze podataka vraća se relativna putanja slike igre na serveru, \n                potrebno ju je izmjeniti tako da bude apsolutna. */\n                this.gamesUsers.forEach((gameUser) => {\n                    gameUser.imagePath = environment.SERVER_URL + gameUser.imagePath.substring(2);\n                });\n                this.gamesUsersChangeSubject.next(this.gamesUsers);\n            });\n    }\n\n    getGamesPlayedByUsers() {\n        return this.gamesUsersChangeSubject;\n    }\n\n    addGamePlayedByUser(userId, gameId) {\n        this.dataService.addGamePlayedByUser(userId, gameId, new Date())\n            .subscribe((res: {status: number, description?: string, insertId?: number}) => {\n                this.syncWithDb();\n            });\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { GameUser } from '../shared/models/game-user.model';\nimport { User } from '../shared/models/user.model';\nimport { AuthService } from '../shared/services/auth.service';\nimport { GamesUsersService } from '../shared/services/games-users.service';\n\n@Component({\n    selector: 'app-user-profile',\n    templateUrl: './user-profile.component.html',\n    styleUrls: ['./user-profile.component.css']\n})\nexport class UserProfileComponent implements OnInit {\n    isUserAuthenticated: boolean = false;;\n    authChangeSubscription: Subscription;\n    gamesUsersChangeSubject: BehaviorSubject<GameUser[]>;\n    gamesUsersChangeSubscription: Subscription;\n    gamesUsers: GameUser[] = [];\n    user: User;\n\n    constructor(\n        private authService: AuthService,\n        private gamesUsersService: GamesUsersService) { }\n\n    ngOnInit() {\n        this.isUserAuthenticated = this.authService.isAuthenticated();\n        this.user = this.authService.getUser();\n        \n        this.authChangeSubscription = this.authService.authChangeSubject\n            .subscribe((res: boolean) => {\n                this.isUserAuthenticated = res;\n                if (this.isUserAuthenticated) {\n                    this.user = this.authService.getUser();\n                }\n            });\n\n        this.gamesUsersChangeSubject = this.gamesUsersService.getGamesPlayedByUsers();\n        this.gamesUsersChangeSubscription = this.gamesUsersChangeSubject\n            .subscribe((res: GameUser[]) => {\n                this.gamesUsers = res.filter((gameUser) => {\n                    return gameUser.userId == this.user.id;\n                });\n            });\n    }\n\n    ngOnDestroy() {\n        this.authChangeSubscription.unsubscribe();\n        this.gamesUsersChangeSubscription.unsubscribe();\n    }\n}\n","<div class=\"container\"\n    id=\"userProfileContainer\">\n    <h1>Hi, {{user.username}}! <span id=\"email\">({{user.email}})</span></h1>\n    <h2>Games you played:</h2>\n    <table id=\"gameDataTable\">\n        <tr>\n            <th colspan=\"2\">Name</th>\n            <th>Timestamp</th>\n        </tr>\n        <tr *ngFor=\"let gameUser of gamesUsers\">\n            <td>\n                <a [routerLink]=\"['/gameProfile', gameUser.id]\">{{gameUser.name}}</a>\n            </td>\n            <td>\n                <a [routerLink]=\"['/gameProfile', gameUser.id]\">\n                    <img [src]=\"gameUser.imagePath\" alt=\"gameImage\">\n                </a>\n            </td>\n            <td>{{gameUser.timestamp | date: \"medium\"}}</td>\n        </tr>\n    </table>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-administration',\n    templateUrl: './administration.component.html',\n    styleUrls: ['./administration.component.css']\n})\nexport class AdministrationComponent implements OnInit {\n    constructor() { }\n    ngOnInit() { }\n}\n","<div class=\"container\"\n    id=\"administrationContainer\">\n\n    <h1>Welcome to administration!</h1>\n    \n    <span>What would You like to do?</span>\n    <div id=\"buttonContainer\">\n        <button class=\"buttonBlue\" \n            routerLink=\"/manageGames\">\n            Manage games</button>\n        <button class=\"buttonBlue\" \n            routerLink=\"/manageGameAuthors\">\n            Manage game authors</button>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UserLevels } from '../shared/enums/user-levels';\nimport { User } from '../shared/models/user.model';\nimport { passwordMismatchValidator } from '../shared/other/password-mismatch-validator';\nimport { UserService } from '../shared/services/user.service';\n\n@Component({\n    selector: 'app-register',\n    templateUrl: './register.component.html',\n    styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n    registerForm: FormGroup;\n    newUser: User;\n    registerErrorMessage: string;\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private router: Router,\n        private usersService: UserService) { }\n\n    ngOnInit() {\n        this.registerForm = this.formBuilder.group(\n            {\n                usernameInput: new FormControl(\"\", [Validators.required, Validators.minLength(4)]),\n                passwordInput: new FormControl(\"\", Validators.required),\n                repeatPasswordInput: new FormControl(\"\", Validators.required),\n                emailInput: new FormControl(\"\", [Validators.required, Validators.email]),\n            },\n            {\n                validators: passwordMismatchValidator\n            });\n    }\n\n    get usernameInput() {\n        return this.registerForm.get(\"usernameInput\");\n    }\n\n    get passwordInput() {\n        return this.registerForm.get(\"passwordInput\");\n    }\n\n    get repeatPasswordInput() {\n        return this.registerForm.get(\"repeatPasswordInput\");\n    }\n\n    get emailInput() {\n        return this.registerForm.get(\"emailInput\");\n    }\n\n    isInputInvalid(input) {\n        return input.invalid && (input.dirty || input.touched);\n    }\n\n    onSubmit() {\n        if (this.registerForm.invalid) {\n            this.registerErrorMessage = 'Plesase enter all required data.';\n        } else {\n            this.newUser = new User();\n\n            this.newUser.username = this.usernameInput.value;\n            this.newUser.email = this.emailInput.value;\n            this.newUser.password = this.passwordInput.value;\n            this.newUser.level = UserLevels.USER;\n\n            this.usersService.addUser(this.newUser).subscribe(\n                (res: { status: number, description?: string }) => {\n                    if (res.status == 200) {\n                        this.router.navigate([\"/login\"]);\n                    } else {\n                        this.registerErrorMessage = res.description;\n                    }\n                }\n            );\n        }\n    }\n\n    passwordsMatch() {\n        if ((this.passwordInput.value != this.repeatPasswordInput.value) && (\n            this.repeatPasswordInput.touched || this.repeatPasswordInput.dirty)) {\n            return false;\n        } else {\n            return true;\n        }\n    }\n}\n","<div id=\"registerFormContainer\">\n    <app-logo id=\"logo\"></app-logo>\n\n    <form [formGroup]=\"registerForm\" \n        (submit)=\"onSubmit()\"\n        id=\"registerForm\">\n\n        <h2>Register</h2>\n\n        <label for=\"usernameInput\">Username:</label>\n        <input type=\"text\" \n            name=\"usernameInput\"\n            placeholder=\"Username\"\n            id=\"usernameInput\"\n            formControlName=\"usernameInput\"\n            [ngClass]=\"{'inputInvalid': isInputInvalid(usernameInput)}\">\n\n        <span class=\"errorText\"\n            *ngIf=\"isInputInvalid(usernameInput)\">\n            Username shorter than 4 characters.</span>\n\n        <label for=\"passwordInput\">Password:</label>\n        <input type=\"password\"\n            name=\"passwordInput\" \n            placeholder=\"Password\" \n            id=\"passwordInput\"\n            formControlName=\"passwordInput\"\n            [ngClass]=\"{'inputInvalid': isInputInvalid(passwordInput)}\">\n\n        <span class=\"errorText\"\n            *ngIf=\"isInputInvalid(passwordInput)\">\n            Password not entered.</span>\n\n        <label for=\"repeatPasswordInput\">Repeat password:</label>\n        <input type=\"password\" \n            name=\"repeatPasswordInput\"\n            placeholder=\"Repeat password\"\n            id=\"repeatPasswordInput\" \n            formControlName=\"repeatPasswordInput\"\n            [ngClass]=\"{'inputInvalid': isInputInvalid(repeatPasswordInput) || !passwordsMatch()}\">\n        \n        <span class=\"errorText\"\n            *ngIf=\"isInputInvalid(repeatPasswordInput) || !passwordsMatch()\">\n            Passwords do not match.</span>\n\n        <label for=\"emailInput\">Email:</label>\n        <input type=\"emailInput\" \n            name=\"emailInput\"    \n            placeholder=\"email@mail.com\"\n            id=\"emailInput\" \n            formControlName=\"emailInput\"\n            [ngClass]=\"{'inputInvalid': isInputInvalid(emailInput)}\">\n\n        <span class=\"error\"\n            *ngIf=\"isInputInvalid(emailInput)\">\n            Email not valid.</span>\n\n        <div id=\"buttonContainer\">\n            <button type=\"submit\" \n                class=\"buttonGreen\">\n                Register</button>\n            <button routerLink=\"/login\" \n                class=\"buttonYellow\">\n                Back to login</button>\n        </div>\n\n        <span class=\"errorText\"\n            id=\"registerErrorMessage\" \n            *ngIf=\"registerErrorMessage\">\n            {{registerErrorMessage}}</span>\n    </form>\n</div>","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { Comment } from '../models/comment.model';\nimport { DataService } from './data.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CommentService {\n    comments: Comment[] = [];\n    commentsChangeSubject: BehaviorSubject<Comment[]> = new BehaviorSubject(this.comments);\n\n    constructor(private dataService: DataService) {\n        this.dataService.getComments()\n            .subscribe((res: { status: number, description?: string, comments: Comment[] }) => {\n                this.comments = res.comments;\n                this.commentsChangeSubject.next(this.comments);\n            });\n    }\n\n    getComments() {\n        return this.commentsChangeSubject;\n    }\n\n    addComment(comment) {\n        this.dataService.addComment(comment)\n            .subscribe((res: { status: number, description?: string, insertId?: number }) => {\n                comment.id = res.insertId;\n                this.comments.push(comment);\n                this.commentsChangeSubject.next(this.comments);\n            });\n    }\n\n    editComment(comment) {\n        this.dataService.editComment(comment)\n            .subscribe((res) => {\n                this.comments[this.comments.findIndex(c => c.id == comment.id)] = comment;\n                this.commentsChangeSubject.next(this.comments);\n            });\n    }\n\n    deleteComment(id) {\n        this.dataService.deleteComment(id)\n            .subscribe((res) => {\n                this.comments = this.comments.filter(comment => comment.id != id);\n                this.commentsChangeSubject.next(this.comments);\n            });\n    }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Comment } from '../shared/models/comment.model';\nimport { User } from '../shared/models/user.model';\nimport { CommentService } from '../shared/services/comment.service';\n\n@Component({\n    selector: 'app-new-comment',\n    templateUrl: './new-comment.component.html',\n    styleUrls: ['./new-comment.component.css']\n})\nexport class NewCommentComponent implements OnInit {\n    newComment: Comment;\n    newCommentForm: FormGroup;\n\n    @Input() user: User;\n    @Input() gameId: number;\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private commentService: CommentService) { }\n\n    ngOnInit(): void {\n        this.newCommentForm = this.formBuilder.group({\n            \"usernameInput\": new FormControl({ value: this.user.username, disabled: true }),\n            \"commentInput\": new FormControl(\"\", Validators.required)\n        });\n    }\n\n    get usernameInput() { return this.newCommentForm.get(\"usernameInput\"); }\n    get commentInput() { return this.newCommentForm.get(\"commentInput\"); }\n\n    isInputInvalid(input) {\n        return input.invalid && (input.dirty || input.touched);\n    }\n\n    onSubmit(): void {\n        this.newComment = new Comment();\n\n        this.newComment.comment = this.commentInput.value;\n        this.newComment.timestamp = new Date();\n        this.newComment.userId = this.user.id;\n        this.newComment.gameId = this.gameId;\n        this.newComment.username = this.user.username;\n\n        this.commentService.addComment(this.newComment);\n    }\n}\n","<form [formGroup]=\"newCommentForm\" \n    (submit)=\"onSubmit()\"\n    id=\"newCommentForm\">\n\n    <label for=\"usernameInput\">Username:</label>\n    <input type=\"text\" \n        id=\"usernameInput\" \n        placeholder=\"Username\"\n        formControlName=\"usernameInput\">\n\n    <label for=\"commentInput\">Comment:</label>\n    <textarea type=\"text\" \n        id=\"commentInput\" \n        cols=\"50\" \n        rows=\"5\"\n        formControlName=\"commentInput\"\n        [ngClass]=\"{'input-invalid': isInputInvalid(commentInput)}\"></textarea>\n    <div class=\"error\"\n        *ngIf=\"isInputInvalid(commentInput)\">\n        Comment not entered.</div>\n\n    <div class=\"btn-container\">\n        <button type=\"submit\" \n            class=\"buttonGreen\"\n            [disabled]=\"!newCommentForm.valid\">\n            Send</button>\n    </div>\n</form>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { User } from '../shared/models/user.model';\r\nimport { AuthService } from '../shared/services/auth.service';\r\nimport { BreakpointObserver, BreakpointState } from '@angular/cdk/layout';\r\n\r\n@Component({\r\n    selector: 'app-home',\r\n    templateUrl: './home.component.html',\r\n    styleUrls: ['./home.component.css'],\r\n})\r\nexport class HomeComponent implements OnInit {\r\n    isUserAuthenticated: boolean = false;\r\n    authChangeSubscription: Subscription;\r\n    displayMainNavigation: boolean = true;\r\n    user: User;\r\n\r\n    constructor(\r\n        private authService: AuthService,\r\n        private router: Router,\r\n        private breakpointObserver: BreakpointObserver) { }\r\n\r\n    ngOnInit() {\r\n        this.isUserAuthenticated = this.authService.isAuthenticated();\r\n        this.authChangeSubscription = this.authService.authChangeSubject\r\n            .subscribe((res: boolean) => {\r\n                this.isUserAuthenticated = res;\r\n            });\r\n\r\n        if (this.isUserAuthenticated) {\r\n            this.user = this.authService.getUser();\r\n        } else {\r\n            this.router.navigate([\"/login\"]);\r\n        }\r\n\r\n        this.breakpointObserver\r\n            .observe([`(max-width: 768px)`])\r\n            .subscribe((breakpointState: BreakpointState) => {\r\n                if (breakpointState.matches) {\r\n                    this.displayMainNavigation = false;\r\n                } else {\r\n                    this.displayMainNavigation = true;\r\n                }\r\n            });\r\n    }\r\n\r\n    toggleMainNav() {\r\n        if (this.displayMainNavigation == true) {\r\n            this.displayMainNavigation = false;\r\n        } else {\r\n            this.displayMainNavigation = true;\r\n        }\r\n    }\r\n\r\n    logout() {\r\n        this.authService.deauthenticateUser();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.authChangeSubscription.unsubscribe();\r\n    }\r\n}\r\n","<app-main-navigation \r\n    [user]=\"user\"\r\n    [ngStyle]=\"{'display': displayMainNavigation ? 'initial' : 'none'}\"\r\n    id=\"mainNavigation\"></app-main-navigation>\r\n<div id=\"content\">\r\n    <app-secondary-navigation \r\n        (displayMenuEvent)=\"toggleMainNav()\"\r\n        id=\"secondaryNavigation\"></app-secondary-navigation>\r\n    <router-outlet></router-outlet>\r\n</div>\r\n","import { Injectable } from \"@angular/core\";\r\nimport { ActivatedRouteSnapshot } from '@angular/router';\r\nimport { CanActivate } from '@angular/router';\r\nimport { Router } from '@angular/router';\r\nimport { RouterStateSnapshot } from '@angular/router';\r\nimport { UrlTree } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n    constructor(\r\n        private authService: AuthService,\r\n        private router: Router) { }\r\n\r\n    canActivate(\r\n        route: ActivatedRouteSnapshot,\r\n        state: RouterStateSnapshot):\r\n        boolean | UrlTree | Observable<boolean | UrlTree> | Promise<boolean | UrlTree> {\r\n\r\n        if (this.authService.isAuthenticated()) {\r\n            return true;\r\n        } else {\r\n            this.router.navigate([\"/login\"]);\r\n            return false;\r\n        }\r\n    }\r\n}","export const environment = {\n    production: false,\n    SERVER_URL: \"http://localhost:8081/\",\n    API_URL: \"http://localhost:8081/api/\"\n};\n","import { Component, Input, OnInit } from '@angular/core';\nimport { User } from '../shared/models/user.model';\nimport { AuthService } from '../shared/services/auth.service';\nimport { UserLevels } from '../shared/enums/user-levels';\n\n@Component({\n    selector: 'app-main-navigation',\n    templateUrl: './main-navigation.component.html',\n    styleUrls: ['./main-navigation.component.css']\n})\nexport class MainNavigationComponent implements OnInit {\n    userLevels = UserLevels;\n    \n    @Input() user: User;\n    \n    constructor(private authService: AuthService) { }\n    ngOnInit() { }\n\n    logout() {\n        this.authService.deauthenticateUser();\n    }\n}\n","<nav id=\"main-navigation\">\n    <app-logo id=\"logo\"></app-logo>\n    <div class=\"separator\"></div>\n    <ul>\n        <li>\n            <span>Current user: {{user.username}}</span>\n        </li>\n    </ul>\n    <div class=\"separator\"></div>\n    <ul>\n        <li>\n            <a routerLink=\"/userProfile\">Profile</a>\n        </li>\n        <li *ngIf=\"user.level==userLevels.ADMIN\">\n            <a routerLink=\"/administration\">Administration</a>\n        </li>\n    </ul>\n    <div class=\"separator\"></div>\n    <ul>\n        <li>\n            <a routerLink=\"/\">Game library</a>\n        </li>\n    </ul>\n    <div class=\"separator\"></div>\n    <ul>\n        <li>\n            <button class=\"buttonRed\" \n                (click)=\"logout()\">Logout</button>\n        </li>\n    </ul>\n</nav>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { Game } from '../shared/models/game.model';\nimport { User } from '../shared/models/user.model';\nimport { AuthService } from '../shared/services/auth.service';\nimport { GameService } from '../shared/services/game.service';\n\n@Component({\n    selector: 'app-game-library',\n    templateUrl: './game-library.component.html',\n    styleUrls: ['./game-library.component.css'],\n})\nexport class GameLibraryComponent implements OnInit {\n    isUserAuthenticated: boolean = false;;\n    authChangeSubscription: Subscription;\n    gamesChangeSubject: BehaviorSubject<Game[]>;\n    gamesChangeSubscription: Subscription;\n    games: Game[] = [];\n    user: User;\n\n    constructor(\n        private authService: AuthService,\n        private gameService: GameService,\n        private router: Router) { }\n\n    ngOnInit() {\n        this.isUserAuthenticated = this.authService.isAuthenticated();\n        this.user = this.authService.getUser();\n        \n        this.authChangeSubscription = this.authService.authChangeSubject\n            .subscribe((res: boolean) => {\n                this.isUserAuthenticated = res;\n                if (this.isUserAuthenticated) {\n                    this.user = this.authService.getUser();\n                } else {\n                    this.router.navigate([\"/login\"]);\n                }\n            });\n\n        this.gamesChangeSubject = this.gameService.getGames();\n        this.gamesChangeSubscription = this.gamesChangeSubject\n            .subscribe((res: Game[]) => {\n                this.games = res;\n            });\n    }\n\n    ngOnDestroy() {\n        this.authChangeSubscription.unsubscribe();\n        this.gamesChangeSubscription.unsubscribe();\n    }\n}\n","<div class=\"container\" \r\n    id=\"gameLibraryContainer\">\r\n    <h1>Game Library</h1>\r\n\r\n    <div id=\"games\">\r\n        <span class=\"errorText\" \r\n            id=\"errorSpan\"\r\n            *ngIf=\"games.length == 0\">\r\n            No games to show.</span>\r\n        <div id=\"gamesContainer\">\r\n            <ng-container *ngFor=\"let game of games\">\r\n                <app-game-tile \r\n                    [game]=\"game\" \r\n                    [editMode]=\"false\"\r\n                    id=\"gameTile\"></app-game-tile>\r\n            </ng-container>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-route-not-found',\n  templateUrl: './route-not-found.component.html',\n  styleUrls: ['./route-not-found.component.css']\n})\nexport class RouteNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\"\n    id=\"routeNotFoundContainer\">\n    <h1>404</h1>\n    <h2>Requested route could not be found</h2>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { GameAuthor } from '../shared/models/game-author.model';\nimport { GameAuthorService } from '../shared/services/game-author.service';\n\n@Component({\n    selector: 'app-add-game-author',\n    templateUrl: './add-game-author.component.html',\n    styleUrls: ['./add-game-author.component.css']\n})\nexport class AddGameAuthorComponent implements OnInit {\n    addGameAuthorForm: FormGroup;\n    addGameAuthorErrorMessage: string;\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private gameAuthorService: GameAuthorService,\n        private router: Router) { }\n\n    ngOnInit() {\n        this.addGameAuthorForm = this.formBuilder.group({\n            nameInput: new FormControl(\"\", Validators.required)\n        });\n    }\n\n    get nameInput() {\n        return this.addGameAuthorForm.get(\"nameInput\");\n    }\n\n    isInputInvalid(input) {\n        return input.invalid && (input.dirty || input.touched);\n    }\n\n    onSubmit() {\n        if (this.addGameAuthorForm.invalid) {\n            this.addGameAuthorErrorMessage = \"Plesase enter all required data.\";\n        } else {\n            let newGameAuthor = new GameAuthor();\n            newGameAuthor.name = this.nameInput.value;\n            this.gameAuthorService.addGameAuthor(newGameAuthor);\n            this.router.navigate([\"/manageGameAuthors\"]);\n        }\n    }\n}\n","<div id=\"addGameAuthorFormContainer\">\n    <form [formGroup]=\"addGameAuthorForm\" \n        (submit)=\"onSubmit()\"\n        id=\"addGameAuthorForm\">\n\n        <h2>Add game author</h2>\n\n        <label for=\"nameInput\">Name:</label>\n        <input type=\"text\" \n            name=\"nameInput\"\n            placeholder=\"Name\"  \n            id=\"nameInput\"\n            formControlName=\"nameInput\"\n            [ngClass]=\"{'inputInvalid': isInputInvalid(nameInput)}\">\n        <span class=\"errorText\" \n            *ngIf=\"isInputInvalid(nameInput)\">\n            Name not entered.</span>\n\n        <div id=\"buttonContainer\">\n            <button type=\"submit\" \n                class=\"buttonBlue\" \n                (click)=\"onSubmit()\">\n                Add game author</button>\n            <button type=\"button\" \n                class=\"buttonRed\" \n                routerLink=\"/manageGameAuthors\">\n                Cancel</button>\n        </div>\n\n        <span class=\"errorText\"\n            id=\"addGameAuthorErrorMessage\" \n            *ngIf=\"addGameAuthorErrorMessage\">\n            {{addGameAuthorErrorMessage}}</span>\n    </form>\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { BehaviorSubject, Subscription } from 'rxjs';\r\nimport { Game } from '../shared/models/game.model';\r\nimport { User } from '../shared/models/user.model';\r\nimport { AuthService } from '../shared/services/auth.service';\r\nimport { GameService } from '../shared/services/game.service';\r\nimport { GamesUsersService } from '../shared/services/games-users.service';\r\n\r\n@Component({\r\n    selector: 'app-game-profile',\r\n    templateUrl: './game-profile.component.html',\r\n    styleUrls: ['./game-profile.component.css'],\r\n})\r\nexport class GameProfileComponent implements OnInit {\r\n    isUserAuthenticated: boolean = false;;\r\n    authChangeSubscription: Subscription;\r\n    gamesChangeSubject: BehaviorSubject<Game[]>;\r\n    gamesChangeSubscription: Subscription;\r\n    errorMessage: string;\r\n    games: Game[];\r\n    game: Game;\r\n    user: User;\r\n\r\n    constructor(\r\n        private activatedRoute: ActivatedRoute,\r\n        private gameService: GameService,\r\n        private authService: AuthService,\r\n        private gamesUsersService: GamesUsersService,\r\n        private router: Router) { }\r\n\r\n    ngOnInit() {\r\n        let routeParams = this.activatedRoute.snapshot.paramMap;\r\n        let id = Number(routeParams.get(\"id\"));\r\n\r\n        this.isUserAuthenticated = this.authService.isAuthenticated();\r\n        this.user = this.authService.getUser();\r\n        \r\n        this.authChangeSubscription = this.authService.authChangeSubject\r\n            .subscribe((res: boolean) => {\r\n                this.isUserAuthenticated = res;\r\n                if (this.isUserAuthenticated) {\r\n                    this.user = this.authService.getUser();\r\n                } else {\r\n                    this.router.navigate([\"/login\"]);\r\n                }\r\n            });\r\n        \r\n        this.gamesChangeSubject = this.gameService.getGames();\r\n        this.gamesChangeSubscription = this.gamesChangeSubject\r\n            .subscribe((res: Game[]) => {\r\n                this.games = res;\r\n                this.game = res.find((game: Game) => {\r\n                    return game.id == id;\r\n                });\r\n                if (!this.game) {\r\n                    this.errorMessage = `Game with the id ${id} does not exist.`;\r\n                } else {\r\n                    this.errorMessage = \"\";\r\n                }\r\n            });\r\n    }\r\n\r\n    logGamePlayedByUser() {\r\n        this.gamesUsersService.addGamePlayedByUser(this.user.id, this.game.id);\r\n    }\r\n    \r\n    ngOnDestroy() {\r\n        this.gamesChangeSubscription.unsubscribe();\r\n    }\r\n}\r\n","<div class=\"container\"\n    id=\"gameProfileContainer\">\n\n    <span class=\"errorText\" \n        id=\"errorSpan\"\n        *ngIf=\"errorMessage\">\n        {{errorMessage}}</span>\n\n    <div id=\"gameData\" \n        *ngIf=\"game\">\n\n        <img [src]=\"game.imagePath\"\n            alt=\"gameImage\" \n            id=\"gameImage\">\n        <h1 id=\"gameName\">{{game.name}}</h1>\n        <h2 id=\"gameAuthorName\">\n            <span>by</span>\n            <a [routerLink]=\"['/gameAuthorProfile', game.gameAuthorId]\">\n                {{game.gameAuthorName}}</a>\n        </h2>\n        <p id=\"gameDescription\">{{game.description}}</p>\n        <a [href]=\"game.link\">\n            <button class=\"buttonGreen\" \n                (click)=\"logGamePlayedByUser()\">\n                Play</button>\n        </a>\n        <a [href]=\"game.sourceLink\">\n            <button class=\"buttonYellow\">View source</button>\n        </a>\n    </div>\n    <app-comments [gameId]=\"game.id\" *ngIf=\"game\"></app-comments>\n</div>","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\n\n\n@Component({\n    selector: 'app-secondary-navigation',\n    templateUrl: './secondary-navigation.component.html',\n    styleUrls: ['./secondary-navigation.component.css']\n})\nexport class SecondaryNavigationComponent implements OnInit {\n    displayMenuButton: boolean;\n    displayLogo: boolean;\n\n    @Output() displayMenuEvent = new EventEmitter();\n\n    constructor() { }\n    ngOnInit() { }\n\n    toggleMenu() {\n        this.displayMenuEvent.emit();\n    }\n}\n","<nav>\n    <app-logo></app-logo>\n    <div id=\"buttons\">\n        <button (click)=\"toggleMenu()\">\n            <img src=\"../../assets/icons/menu.svg\" alt=\"menu\">\n        </button>\n    </div>\n</nav>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { GameAuthor } from '../shared/models/game-author.model';\nimport { GameAuthorService } from '../shared/services/game-author.service';\n\n@Component({\n    selector: 'app-edit-game-author',\n    templateUrl: './edit-game-author.component.html',\n    styleUrls: ['./edit-game-author.component.css']\n})\nexport class EditGameAuthorComponent implements OnInit {\n    editGameAuthorForm: FormGroup;\n    editGameAuthorErrorMessage: string;\n    gameAuthor: GameAuthor;\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private gameAuthorService: GameAuthorService,\n        private router: Router,\n        private activatedRoute: ActivatedRoute) { }\n\n    ngOnInit() {\n        let routeParams = this.activatedRoute.snapshot.paramMap;\n        let id = Number(routeParams.get(\"id\"));\n\n        this.editGameAuthorForm = this.formBuilder.group({\n            nameInput: new FormControl(\"\", Validators.required)\n        });\n\n        this.gameAuthorService.getGameAuthors()\n            .subscribe((res: GameAuthor[]) => {\n                this.gameAuthor = res.find((gameAuthor) => {\n                    return gameAuthor.id == id;\n                })\n\n                if (this.gameAuthor) {\n                    this.nameInput.setValue(this.gameAuthor.name);\n                }\n            });\n    }\n\n    get nameInput() {\n        return this.editGameAuthorForm.get(\"nameInput\");\n    }\n\n    isInputInvalid(input) {\n        return input.invalid && (input.dirty || input.touched);\n    }\n\n    onSubmit() {\n        if (this.editGameAuthorForm.invalid) {\n            this.editGameAuthorErrorMessage = \"Plesase enter all required data.\";\n        } else {\n            let newGameAuthor = new GameAuthor();\n            newGameAuthor.id = this.gameAuthor.id;\n            newGameAuthor.name = this.nameInput.value;\n            this.gameAuthorService.editGameAuthor(newGameAuthor);\n            this.router.navigate([\"/manageGameAuthors\"]);\n        }\n    }\n}\n","<div id=\"editGameAuthorFormContainer\">\n    <form [formGroup]=\"editGameAuthorForm\" \n        (submit)=\"onSubmit()\"\n        id=\"editGameAuthorForm\">\n\n        <h2>Edit game author</h2>\n\n        <label for=\"nameInput\">Name:</label>\n        <input type=\"text\" \n            name=\"nameInput\"\n            placeholder=\"Name\"  \n            id=\"nameInput\"\n            formControlName=\"nameInput\"\n            [ngClass]=\"{'inputInvalid': isInputInvalid(nameInput)}\">\n        <span class=\"errorText\" \n            *ngIf=\"isInputInvalid(nameInput)\">\n            Name not entered.</span>\n\n        <div id=\"buttonContainer\">\n            <button type=\"submit\" \n                class=\"buttonBlue\" \n                (click)=\"onSubmit()\">\n                Edit game author</button>\n            <button type=\"button\" \n                class=\"buttonRed\" \n                routerLink=\"/manageGameAuthors\">\n                Cancel</button>\n        </div>\n\n        <span class=\"errorText\"\n            id=\"editGameAuthorErrorMessage\" \n            *ngIf=\"editGameAuthorErrorMessage\">\n            {{editGameAuthorErrorMessage}}</span>\n    </form>\n</div>\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subject } from 'rxjs';\nimport { DataService } from './data.service';\nimport { User } from '../models/user.model';\nimport { UserLevels } from '../enums/user-levels';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthService {\n    public authChangeSubject: Subject<boolean> = new Subject<boolean>();\n    public authErrorSubject: Subject<string> = new Subject<string>();\n\n    private user: User;\n\n    constructor(\n        private dataService: DataService, \n        private router: Router) { }\n\n    authenticateUser(username, password) {\n        this.dataService\n            .authenticateUser(username, password)\n            .subscribe((res: { status: number; description?: string; user?: User }) => {\n                if (res.status == 200) {\n                    this.user = res.user;\n                    localStorage.setItem('user', JSON.stringify(this.user));\n                    this.authChangeSubject.next(true);\n                    this.router.navigate(['/']);\n                } else {\n                    this.authErrorSubject.next(res.description);\n                }\n            }\n        );\n    }\n\n    deauthenticateUser() {\n        this.user = null;\n        localStorage.removeItem('user');\n        this.authChangeSubject.next(false);\n        this.router.navigate(['/login']);\n    }\n\n    getUser() {\n        if (!this.user) {\n            this.user = JSON.parse(localStorage.getItem('user'));\n        } else {\n            return this.user;\n        }\n    }\n\n    isAuthenticated() {\n        return this.user != null;\n    }\n\n    isAdmin() {\n        return this.user.level == UserLevels.ADMIN;\n    }\n}\n","export class User {\r\n    id: number;\r\n    username: string;\r\n    email: string;\r\n    password: string;\r\n    level: number;\r\n}","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { GameAuthor } from '../models/game-author.model';\nimport { DataService } from './data.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class GameAuthorService {\n    gameAuthors: GameAuthor[] = [];\n    gameAuthorsChangeSubject: BehaviorSubject<GameAuthor[]> = new BehaviorSubject(this.gameAuthors);\n\n    constructor(private dataService: DataService) {\n        this.dataService.getGameAuthors()\n            .subscribe((res: { status: number, description?: string, gameAuthors: GameAuthor[] }) => {\n                this.gameAuthors = res.gameAuthors;\n                this.gameAuthorsChangeSubject.next(this.gameAuthors);\n            });\n    }\n\n    getGameAuthors() {\n        return this.gameAuthorsChangeSubject;\n    }\n\n    addGameAuthor(gameAuthor) {\n        this.dataService.addGameAuthor(gameAuthor)\n            .subscribe((res: { status: number, description?: string, insertId?: number }) => {\n                gameAuthor.id = res.insertId;\n                this.gameAuthors.push(gameAuthor);\n                this.gameAuthorsChangeSubject.next(this.gameAuthors);\n            });\n    }\n\n    editGameAuthor(gameAuthor) {\n        this.dataService.editGameAuthor(gameAuthor)\n            .subscribe((res) => {\n                this.gameAuthors[this.gameAuthors.findIndex(ga => ga.id == gameAuthor.id)] = gameAuthor;\n                this.gameAuthorsChangeSubject.next(this.gameAuthors);\n            });\n    }\n\n    deleteGameAuthor(id) {\n        this.dataService.deleteGameAuthor(id)\n            .subscribe((res) => {\n                this.gameAuthors = this.gameAuthors.filter(gameAuthor => gameAuthor.id != id);\n                this.gameAuthorsChangeSubject.next(this.gameAuthors);\n            });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { Game } from '../models/game.model';\nimport { DataService } from './data.service';\nimport { environment } from 'src/environments/environment';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class GameService {\n    games: Game[] = [];\n    gamesChangeSubject: BehaviorSubject<Game[]> = new BehaviorSubject(this.games);\n\n    constructor(private dataService: DataService) {\n        this.syncWithDb();\n    }\n\n    syncWithDb() {\n        this.dataService.getGames()\n            .subscribe((res: { status: number, description?: string, games: Game[] }) => {\n                this.games = res.games;\n                /* Iz baze podataka vraća se relativna putanja slike igre na serveru, \n                potrebno ju je izmjeniti tako da bude apsolutna. */\n                this.games.forEach((game) => {\n                    game.imagePath = environment.SERVER_URL + game.imagePath.substring(2);\n                });\n                this.gamesChangeSubject.next(this.games);\n            });\n    }\n\n    getGames() {\n        return this.gamesChangeSubject;\n    }\n\n    addGame(gameFormData) {\n        this.dataService.addGame(gameFormData)\n            .subscribe((res: {status: number, description?: string, insertId?: number}) => {\n                this.syncWithDb();\n            });\n    }\n\n    editGame(gameFormData) {\n        this.dataService.editGame(gameFormData)\n            .subscribe((res: {status: number, description?: string, changedRows?: number}) => {\n                this.syncWithDb();\n            });\n    }\n\n    deleteGame(id) {\n        this.dataService.deleteGame(id)\n            .subscribe((res) => {\n                this.games = this.games.filter(game => game.id != id);\n                this.gamesChangeSubject.next(this.games);\n            });\n    }\n}\n","import { Component } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { AuthService } from './shared/services/auth.service';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n    constructor(\n        private authService: AuthService,\n        private title: Title) { }\n\n    ngOnInit() {\n        this.title.setTitle(\"ngArcade\");\n        this.authService.getUser();\n    }\n}\n","<router-outlet></router-outlet>","import { Component, Input, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Comment } from '../shared/models/comment.model';\nimport { User } from '../shared/models/user.model';\nimport { CommentService } from '../shared/services/comment.service';\n\n@Component({\n    selector: 'app-comment',\n    templateUrl: './comment.component.html',\n    styleUrls: ['./comment.component.css']\n})\nexport class CommentComponent implements OnInit {\n    editCommentForm: FormGroup;\n    editMode: boolean = false;\n\n    @Input() comment: Comment;\n    @Input() user: User;\n    @Input() enableEdit: boolean;\n\n    constructor(\n        private commentService: CommentService,\n        private formBuilder: FormBuilder) { }\n\n    ngOnInit() {\n        this.editCommentForm = this.formBuilder.group({\n            \"commentInput\": new FormControl({\n                value: this.comment.comment,\n                disabled: true\n            }, Validators.required)\n        });\n    }\n\n    get commentInput() { \n        return this.editCommentForm.get(\"commentInput\"); \n    }\n\n    isInputInvalid(input) {\n        return input.invalid && (input.dirty || input.touched);\n    }\n\n    editComment() {\n        this.editMode = true;\n        this.commentInput.enable();\n    }\n\n    cancelEditComment() {\n        this.editMode = false;\n        this.commentInput.setValue(this.comment.comment);\n        this.commentInput.disable();\n    }\n\n    deleteComment() {\n        this.commentService.deleteComment(this.comment.id);\n    }\n\n    onSubmit() {\n        let editedComment = new Comment();\n\n        this.commentInput.disable()\n        this.editMode = false;\n\n        editedComment = this.comment;\n        editedComment.comment = this.commentInput.value;\n        editedComment.timestamp = new Date();\n\n        this.commentService.editComment(editedComment);\n    }\n}\n","<form [formGroup]=\"editCommentForm\" \n    (submit)=\"onSubmit()\"\n    id=\"editCommentForm\">\n    \n    <p>By <strong>{{comment.username}}</strong> on {{comment.timestamp | date:\"short\"}}</p>\n    \n    <textarea id=\"commentInput\" \n        cols=\"50\" \n        rows=\"4\"\n        formControlName=\"commentInput\"\n        [ngClass]=\"{'input-invalid': isInputInvalid(commentInput)}\"></textarea>\n    <div class=\"buttonContainer\" \n        *ngIf=\"comment.userId==user.id && editMode==false && enableEdit\">\n        <button type=\"button\" \n            class=\"buttonRed\"\n            title=\"Delete\"\n            (click)=\"deleteComment(comment.id)\">Delete</button>\n        <button type=\"button\" \n            class=\"buttonYellow\"\n            title=\"Edit\"\n            (click)=\"editComment()\">\n            Edit</button>\n    </div>\n    <div class=\"buttonContainer\" \n        *ngIf=\"comment.userId==user.id && editMode==true\">\n        <button type=\"button\" \n            class=\"buttonRed\" \n            (click)=\"cancelEditComment()\">\n            Cancel</button>\n        <button type=\"submit\" class=\"buttonYellow\">\n            Finish editing</button>\n    </div>\n</form>","import { Component, Input, OnInit } from '@angular/core';\nimport { Game } from '../shared/models/game.model';\nimport { GameService } from '../shared/services/game.service';\n\n@Component({\n    selector: 'app-game-tile',\n    templateUrl: './game-tile.component.html',\n    styleUrls: ['./game-tile.component.css']\n})\nexport class GameTileComponent implements OnInit {\n    @Input() game: Game;\n    @Input() editMode: boolean;\n\n    constructor(private gameService: GameService) { }\n    ngOnInit() { }\n\n    deleteGame(id) {\n        this.gameService.deleteGame(id);\n    }\n}\n","<div class=\"game\">\n    <a [routerLink]=\"['/gameProfile', game.id]\">\n        <img [src]=\"game.imagePath\" alt=\"gameImage\" id=\"gameImage\">\n        <h4>{{game.name}}</h4>\n    </a>\n    <a [routerLink]=\"['/gameAuthorProfile', game.gameAuthorId]\" \n        id=\"gamesAuthorName\">{{game.gameAuthorName}}</a>\n    <div id=\"buttonContainer\" *ngIf=\"editMode\">\n        <button class=\"buttonYellow\" [routerLink]=\"['/editGame', game.id]\">\n            <img src=\"../../assets/icons/edit.svg\" \n                alt=\"Edit\" \n                title=\"Edit\">\n        </button>\n        <button class=\"buttonRed\" (click)=\"deleteGame(game.id)\">\n            <img src=\"../../assets/icons/delete.svg\" \n                alt=\"Delete\"\n                title=\"Delete\">\n        </button>\n    </div>\n</div>","import { BrowserModule, Title } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { HomeComponent } from './home/home.component';\nimport { GameProfileComponent } from './game-profile/game-profile.component';\nimport { UserProfileComponent } from './user-profile/user-profile.component';\nimport { GameAuthorProfileComponent } from './game-author-profile/game-author-profile.component';\nimport { GameLibraryComponent } from './game-library/game-library.component';\nimport { MainNavigationComponent } from './main-navigation/main-navigation.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { AuthGuard } from './shared/other/auth-guard';\nimport { AdminGuard } from './shared/other/admin-guard';\nimport { LogoComponent } from './logo/logo.component';\nimport { SecondaryNavigationComponent } from './secondary-navigation/secondary-navigation.component';\nimport { GameTileComponent } from './game-tile/game-tile.component';\nimport { AdministrationComponent } from './administration/administration.component';\nimport { AddGameComponent } from './add-game/add-game.component';\nimport { EditGameComponent } from './edit-game/edit-game.component';\nimport { AddGameAuthorComponent } from './add-game-author/add-game-author.component';\nimport { EditGameAuthorComponent } from './edit-game-author/edit-game-author.component';\nimport { ManageGamesComponent } from './manage-games/manage-games.component';\nimport { ManageGameAuthorsComponent } from './manage-game-authors/manage-game-authors.component';\nimport { CommentsComponent } from './comments/comments.component';\nimport { NewCommentComponent } from './new-comment/new-comment.component';\nimport { CommentComponent } from './comment/comment.component';\nimport { RouteNotFoundComponent } from './route-not-found/route-not-found.component';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        LoginComponent,\n        RegisterComponent,\n        HomeComponent,\n        GameProfileComponent,\n        UserProfileComponent,\n        GameAuthorProfileComponent,\n        GameLibraryComponent,\n        MainNavigationComponent,\n        LogoComponent,\n        SecondaryNavigationComponent,\n        GameTileComponent,\n        AdministrationComponent,\n        AddGameComponent,\n        EditGameComponent,\n        AddGameAuthorComponent,\n        EditGameAuthorComponent,\n        ManageGamesComponent,\n        ManageGameAuthorsComponent,\n        CommentsComponent,\n        NewCommentComponent,\n        CommentComponent,\n        RouteNotFoundComponent\n    ],\n    imports: [\n        BrowserModule,\n        AppRoutingModule,\n        HttpClientModule,\n        ReactiveFormsModule\n    ],\n    providers: [AuthGuard, AdminGuard, Title],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { GameAuthor } from '../shared/models/game-author.model';\nimport { Game } from '../shared/models/game.model';\nimport { GameAuthorService } from '../shared/services/game-author.service';\nimport { GameService } from '../shared/services/game.service';\n\n@Component({\n    selector: 'app-game-author-profile',\n    templateUrl: './game-author-profile.component.html',\n    styleUrls: ['./game-author-profile.component.css'],\n})\nexport class GameAuthorProfileComponent implements OnInit {\n    gameAuthorsChangeSubject: BehaviorSubject<GameAuthor[]>;\n    gamesChangeSubject: BehaviorSubject<Game[]>;\n    gameAuthorsChangeSubscription: Subscription;\n    gamesChangeSubscription: Subscription;\n    gameAuthors: GameAuthor;\n    gameAuthor: GameAuthor;\n    games: Game[] = [];\n    errorMessage: string;\n\n    constructor(\n        private activatedRoute: ActivatedRoute,\n        private gameAuthorService: GameAuthorService, \n        private gameService: GameService) { }\n        \n    ngOnInit() {\n        let routeParams = this.activatedRoute.snapshot.paramMap;\n        let id = Number(routeParams.get(\"id\"));\n\n        this.gameAuthorsChangeSubject = this.gameAuthorService.getGameAuthors();\n        this.gameAuthorsChangeSubscription = this.gameAuthorsChangeSubject\n            .subscribe((res: GameAuthor[]) => {\n                this.gameAuthor = res.find((gameAuthor) => {\n                    return gameAuthor.id = id;\n                });\n                if (!this.gameAuthor) {\n                    this.errorMessage = `Game author with the id ${id} does not exist.`;\n                } else {\n                    this.errorMessage = \"\";\n                }\n            });\n\n        this.gamesChangeSubject = this.gameService.getGames();\n        this.gamesChangeSubscription = this.gamesChangeSubject\n            .subscribe((res: Game[]) => {\n                this.games = res.filter((game) => {\n                    return game.gameAuthorId == id; \n                });\n            });\n    }\n}\n","<div class=\"container\"\r\n    id=\"gameAuthorProfileContainer\">\r\n\r\n    <span class=\"errorText\" \r\n        id=\"errorSpan\"\r\n        *ngIf=\"errorMessage\">\r\n        {{errorMessage}}</span>\r\n    \r\n    <div id=\"gameAuthorData\"\r\n        *ngIf=\"gameAuthor\">\r\n\r\n    <h1>{{gameAuthor.name}}</h1>\r\n    \r\n    <h2>Games by {{gameAuthor.name}}:</h2>\r\n        <table id=\"gameAuthorDataTable\">\r\n            <tr>\r\n                <th colspan=\"2\">Name</th>\r\n            </tr>\r\n            <tr *ngFor=\"let game of games\">\r\n                <td>\r\n                    <a [routerLink]=\"['/gameProfile', game.id]\">{{game.name}}</a>\r\n                </td>\r\n                <td>\r\n                    <a [routerLink]=\"['/gameProfile', game.id]\">\r\n                        <img [src]=\"game.imagePath\" alt=\"gameImage\">\r\n                    </a>\r\n                </td>\r\n            </tr>\r\n        </table>\r\n    </div>\r\n</div>\r\n","export class GameAuthor {\r\n    id: number;\r\n    name: string;\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { GameAuthor } from '../shared/models/game-author.model';\nimport { Game } from '../shared/models/game.model';\nimport { GameAuthorService } from '../shared/services/game-author.service';\nimport { GameService } from '../shared/services/game.service';\n\n@Component({\n    selector: 'app-edit-game',\n    templateUrl: './edit-game.component.html',\n    styleUrls: ['./edit-game.component.css']\n})\nexport class EditGameComponent implements OnInit {\n    editGameForm: FormGroup;\n    editGameErrorMessage: string;\n    gameAuthorsChangeSubject: BehaviorSubject<GameAuthor[]>;\n    gameAuthorsChangeSubscription: Subscription;\n    gameAuthors: GameAuthor[] = [];\n    image: any;\n    game: Game;\n\n    constructor(\n        private activatedRoute: ActivatedRoute,\n        private formBuilder: FormBuilder,\n        private gameService: GameService,\n        private gameAuthorService: GameAuthorService,\n        private router: Router) { }\n\n    ngOnInit() {\n        let routeParams = this.activatedRoute.snapshot.paramMap;\n        let id = Number(routeParams.get(\"id\"));\n\n        this.editGameForm = this.formBuilder.group({\n            nameInput: new FormControl(\"\", Validators.required),\n            linkInput: new FormControl(\"\", Validators.required),\n            sourceLinkInput: new FormControl(\"\", Validators.required),\n            imageInput: new FormControl(\"\"),\n            descriptionInput: new FormControl(\"\", Validators.required),\n            gameAuthorIdInput: new FormControl(\"\", Validators.required)\n        });\n\n        this.gameAuthorsChangeSubject = this.gameAuthorService.getGameAuthors();\n        this.gameAuthorsChangeSubscription = this.gameAuthorsChangeSubject\n            .subscribe((res: GameAuthor[]) => {\n                this.gameAuthors = res;\n            });\n\n        this.gameService.getGames()\n            .subscribe((res: Game[]) => {\n                this.game = res.find((game) => {\n                    return game.id == id;\n                })\n                \n                if (this.game) {\n                    this.nameInput.setValue(this.game.name);\n                    this.linkInput.setValue(this.game.link);\n                    this.sourceLinkInput.setValue(this.game.sourceLink);\n                    this.descriptionInput.setValue(this.game.description);\n                    this.gameAuthorIdInput.setValue(this.game.gameAuthorId);\n                }\n            });\n    }\n\n    get nameInput() {\n        return this.editGameForm.get(\"nameInput\");\n    }\n\n    get linkInput() {\n        return this.editGameForm.get(\"linkInput\");\n    }\n\n    get sourceLinkInput() {\n        return this.editGameForm.get(\"sourceLinkInput\");\n    }\n\n    get imageInput() {\n        return this.editGameForm.get(\"imageInput\");\n    }\n\n    get descriptionInput() {\n        return this.editGameForm.get(\"descriptionInput\");\n    }\n\n    get gameAuthorIdInput() {\n        return this.editGameForm.get(\"gameAuthorIdInput\");\n    }\n\n    isInputInvalid(input) {\n        return input.invalid && (input.dirty || input.touched);\n    }\n\n    onFileChange(event) {\n        if (event.target.files.length > 0) {\n            this.image = event.target.files[0];\n        }\n    }\n\n    onSubmit() {\n        if (this.editGameForm.invalid) {\n            this.editGameErrorMessage = 'Plesase enter all required data.';            \n        } else {\n            let formData = new FormData();\n\n            formData.append(\"id\", `${this.game.id}`);\n            formData.append(\"name\", this.nameInput.value);\n            formData.append(\"link\", this.linkInput.value);\n            formData.append(\"sourceLink\", this.sourceLinkInput.value);\n            formData.append(\"description\", this.descriptionInput.value);\n            formData.append(\"gameAuthorId\", this.gameAuthorIdInput.value);\n\n            if (this.image) { \n                formData.append(\"image\", this.image);\n            }\n            \n            this.gameService.editGame(formData);\n            this.router.navigate([\"/manageGames\"]);\n        }\n    }\n\n    ngOnDestroy() {\n        this.gameAuthorsChangeSubscription.unsubscribe();\n    }\n}\n","<div id=\"editGameContainer\">\n    <form [formGroup]=\"editGameForm\" \n    (submit)=\"onSubmit()\">\n\n        <h2>Edit game</h2>\n\n        <label for=\"nameInput\">Name:</label>\n        <input type=\"text\" \n            name=\"nameInput\"\n            placeholder=\"Name\"  \n            id=\"nameInput\"\n            formControlName=\"nameInput\"\n            [ngClass]=\"{'inputInvalid': isInputInvalid(nameInput)}\">\n        <span class=\"errorText\" \n            *ngIf=\"isInputInvalid(nameInput)\">\n            Game name not entered.</span>\n\n        <label for=\"linkInput\">Link:</label>\n        <input type=\"url\" \n            name=\"linkInput\"\n            placeholder=\"www.playablegame.com\"\n            id=\"linkInput\"\n            formControlName=\"linkInput\"\n            [ngClass]=\"{'inputInvalid': isInputInvalid(linkInput)}\">\n        <span class=\"descriptionText\">\n            Link to a playable instance of a game.</span> \n        <span class=\"errorText\" \n            *ngIf=\"isInputInvalid(linkInput)\">\n            Link not entered.</span>\n\n        <label for=\"sourceLinkInput\">Source link:</label>\n        <input type=\"url\" \n            name=\"sourceLinkInput\"\n            placeholder=\"www.gamesource.com\"\n            id=\"sourceLinkInput\"\n            formControlName=\"sourceLinkInput\"\n            [ngClass]=\"{'inputInvalid': isInputInvalid(sourceLinkInput)}\">\n        <span class=\"descriptionText\">\n            Link to a repository containing game source code.</span> \n        <span class=\"errorText\" \n            *ngIf=\"isInputInvalid(sourceLinkInput)\">\n            Source link not entered.</span>\n\n        <label for=\"imageInput\">Image:</label>\n        <input type=\"file\" \n            name=\"imageInput\"\n            id=\"imageInput\"\n            formControlName=\"imageInput\"\n            (change)=\"onFileChange($event)\"\n            [ngClass]=\"{'inputInvalid': isInputInvalid(imageInput)}\">\n        <span class=\"errorText\" \n            *ngIf=\"isInputInvalid(imageInput)\">\n            Game image not selected.</span>\n\n        <label for=\"descriptionInput\">Description:</label>\n        <textarea name=\"descriptionInput\" \n            id=\"descriptionInput\" \n            cols=\"30\"\n            rows=\"5\"\n            formControlName=\"descriptionInput\"\n            [ngClass]=\"{'inputInvalid': isInputInvalid(descriptionInput)}\">Description</textarea>\n        <span class=\"errorText\" \n            *ngIf=\"isInputInvalid(descriptionInput)\">\n            Description not entered.</span>\n\n        <label for=\"gameAuthorIdInput\">Game author:</label>\n        <select name=\"gameAuthorIdInput\" \n            id=\"gameAuthorIdInput\"\n            formControlName=\"gameAuthorIdInput\">\n            <option *ngFor=\"let gameAuthor of gameAuthors\" \n                [value]=\"gameAuthor.id\">{{gameAuthor.name}}</option>\n        </select>\n        <span class=\"descriptionText\">\n            If game author is not available, add new game author on the administration page.</span> \n        <span class=\"errorText\" \n            *ngIf=\"isInputInvalid(gameAuthorIdInput)\">\n            Game author not selected.</span>\n\n        <div id=\"buttonContainer\">\n            <button type=\"submit\" \n                class=\"buttonBlue\" \n                (click)=\"onSubmit()\">Edit game</button>\n            <button type=\"button\" \n                class=\"buttonRed\" \n                routerLink=\"/manageGames\">Cancel</button>\n        </div>\n\n        <span class=\"errorText\"\n            id=\"editGameErrorMessage\" \n            *ngIf=\"editGameErrorMessage\">\n            {{editGameErrorMessage}}</span>\n    </form>\n</div>","import { Injectable } from \"@angular/core\";\r\nimport { ActivatedRouteSnapshot } from '@angular/router';\r\nimport { CanActivate } from '@angular/router';\r\nimport { Router } from '@angular/router';\r\nimport { RouterStateSnapshot } from '@angular/router';\r\nimport { UrlTree } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Injectable()\r\nexport class AdminGuard implements CanActivate {\r\n    constructor(\r\n        private authService: AuthService,\r\n        private router: Router) { }\r\n\r\n    canActivate(\r\n        route: ActivatedRouteSnapshot,\r\n        state: RouterStateSnapshot):\r\n        boolean | UrlTree | Observable<boolean | UrlTree> | Promise<boolean | UrlTree> {\r\n\r\n        if (this.authService.isAdmin()) {\r\n            return true;\r\n        } else {\r\n            this.router.navigate([\"/\"]);\r\n            return false;\r\n        }\r\n    }\r\n}","import { Component, Input, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { Comment } from '../shared/models/comment.model';\nimport { User } from '../shared/models/user.model';\nimport { AuthService } from '../shared/services/auth.service';\nimport { CommentService } from '../shared/services/comment.service';\n\n@Component({\n    selector: 'app-comments',\n    templateUrl: './comments.component.html',\n    styleUrls: ['./comments.component.css']\n})\nexport class CommentsComponent implements OnInit {\n    @Input() gameId: number;\n\n    isUserAuthenticated: boolean = false;\n    displayNewCommentComponent: boolean = false;\n    authChangeSubscription: Subscription;\n    commentsChangeSubject: BehaviorSubject<Comment[]>;\n    commentsChangeSubscription: Subscription;\n    comments: Comment[] = [];\n    user: User;\n\n    constructor(\n        private authService: AuthService,\n        private commentService: CommentService,\n        private router: Router) { }\n\n    ngOnInit() {\n        this.isUserAuthenticated = this.authService.isAuthenticated();\n        this.user = this.authService.getUser();\n\n        this.authChangeSubscription = this.authService.authChangeSubject\n            .subscribe((res: boolean) => {\n                this.isUserAuthenticated = res;\n                if (this.isUserAuthenticated) {\n                    this.user = this.authService.getUser();\n                } else {\n                    this.router.navigate([\"/login\"]);\n                }\n            });\n\n        this.commentsChangeSubject = this.commentService.getComments();\n        this.commentsChangeSubscription = this.commentsChangeSubject\n            .subscribe((res: Comment[]) => {\n                this.comments = res.filter((comment) => {\n                    return comment.gameId == this.gameId;\n                });\n            });\n    }\n\n    ngOnDestroy() {\n        this.authChangeSubscription.unsubscribe();\n        this.commentsChangeSubscription.unsubscribe();\n    }\n}\n","<div id=\"comment-container\">\n    <h2>Comments ({{comments.length}}):</h2>\n\n    <div class=\"comment\" \n        *ngFor=\"let comment of comments\">\n        <app-comment [comment]=\"comment\" \n            [user]=\"user\" \n            [enableEdit]=\"true\"></app-comment>\n    </div>\n\n    <app-new-comment *ngIf=\"displayNewCommentComponent\"\n        [user]=\"user\" \n        [gameId]=\"gameId\"></app-new-comment>\n\n    <div id=\"buttonContainer\">\n        <button class=\"buttonGreen\" \n            (click)=\"displayNewCommentComponent=true\"\n            *ngIf=\"displayNewCommentComponent==false\">\n            New comment</button>\n        <button class=\"buttonRed\" \n            (click)=\"displayNewCommentComponent=false\"\n            *ngIf=\"displayNewCommentComponent==true\">\n            Close</button>\n    </div>\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class DataService {\n    apiRootURL: string = environment.API_URL;\n    apiUsersURL: string = environment.API_URL + \"users/\";\n    apiGameAuthorsURL: string = environment.API_URL + \"gameAuthors/\";\n    apiGamesURL: string = environment.API_URL + \"games/\";\n    apiGamesByAuthorURL: string = environment.API_URL + \"games/byAuthor/\";\n    apiGameImagesURL: string = environment.API_URL + \"games/uploadGameImage/\";\n    apiCommentsURL: string = environment.API_URL + \"comments/\";\n    apiCommentsByGameURL: string = environment.API_URL + \"comments/byGame/\";\n    apiCommentsByUserURL: string = environment.API_URL + \"comments/byUser/\";\n    apiGamesUsersURL: string = environment.API_URL + \"gamesUsers/\";\n    apiGamesUsersByUserURL: string = environment.API_URL + \"gamesUsers/byUser/\";\n    apiAuthURL: string = environment.API_URL + 'auth/';\n\n    constructor(private httpClient: HttpClient) { }\n\n    // Users.\n\n    getUsers() {\n        return this.httpClient.get(this.apiUsersURL);\n    }\n\n    getUser(id) {\n        return this.httpClient.get(this.apiUsersURL + id);\n    }\n\n    addUser(user) {\n        return this.httpClient.post(this.apiUsersURL, user);\n    }\n\n    editUser(user) {\n        return this.httpClient.put(this.apiUsersURL, user);\n    }\n\n    deleteUser(id) {\n        return this.httpClient.delete(this.apiUsersURL + id);\n    }\n\n    // Game authors.\n\n    getGameAuthors() {\n        return this.httpClient.get(this.apiGameAuthorsURL);\n    }\n\n    getGameAuthor(id) {\n        return this.httpClient.get(this.apiGameAuthorsURL + id);\n    }\n\n    addGameAuthor(gameAuthor) {\n        return this.httpClient.post(this.apiGameAuthorsURL, gameAuthor);\n    }\n\n    editGameAuthor(gameAuthor) {\n        return this.httpClient.put(this.apiGameAuthorsURL, gameAuthor);\n    }\n\n    deleteGameAuthor(id) {\n        return this.httpClient.delete(this.apiGameAuthorsURL + id);\n    }\n\n    // Games.\n\n    getGames() {\n        return this.httpClient.get(this.apiGamesURL);\n    }\n\n    getGamesByAuthor(id) {\n        return this.httpClient.get(this.apiGamesByAuthorURL + id);\n    }\n\n    getGame(id) {\n        return this.httpClient.get(this.apiGamesURL + id);\n    }\n\n    /* Prlikom dodavanja igre šalje se multipart forma jer se šalje \n    i slika igre zajedno sa drugim tekstualnim poljima. */\n    addGame(gameFormData) {\n        return this.httpClient.post(this.apiGamesURL, gameFormData);\n    }\n\n    /* Prlikom uređivanja igre šalje se multipart forma jer se šalje \n    i slika igre zajedno sa drugim tekstualnim poljima. */\n    editGame(gameFormData) {\n        return this.httpClient.put(this.apiGamesURL, gameFormData);\n    }\n\n    deleteGame(id) {\n        return this.httpClient.delete(this.apiGamesURL + id);\n    }\n\n    uploadGameImage(gameId, gameImage) {\n        return this.httpClient.post(this.apiGameImagesURL + gameId, gameImage);\n    }\n\n    // Comments.\n\n    getComments() {\n        return this.httpClient.get(this.apiCommentsURL);\n    }\n\n    getCommentsByGame(id) {\n        return this.httpClient.get(this.apiCommentsByGameURL + id);\n    }\n\n    getCommentsByUser(id) {\n        return this.httpClient.get(this.apiCommentsByUserURL + id);\n    }\n\n    getComment(id) {\n        return this.httpClient.get(this.apiCommentsURL + id);\n    }\n\n    addComment(comment) {\n        return this.httpClient.post(this.apiCommentsURL, comment);\n    }\n\n    editComment(comment) {\n        return this.httpClient.put(this.apiCommentsURL, comment);\n    }\n\n    deleteComment(id) {\n        return this.httpClient.delete(this.apiCommentsURL + id);\n    }\n\n    // GamesUsers.\n\n    getGamesPlayedByUsers() {\n        return this.httpClient.get(this.apiGamesUsersURL);\n    }\n\n    getGamesPlayedByUser(id) {\n        return this.httpClient.get(this.apiGamesUsersByUserURL + id);\n    }\n\n    addGamePlayedByUser(userId, gameId, timestamp) {\n        return this.httpClient.post(this.apiGamesUsersURL, {\n            userId: userId,\n            gameId: gameId,\n            timestamp: timestamp\n        });\n    }\n\n    // Authentication.\n\n    authenticateUser(username, password) {\n        return this.httpClient.post(this.apiAuthURL, {\n            username: username,\n            password: password,\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { DataService } from './data.service';\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class UserService {\n    constructor(private dataService: DataService) { }\n\n    getUsers() {\n        return this.dataService.getUsers();\n    }\n\n    getUser(id) {\n        return this.dataService.getUser(id);\n    }\n\n    addUser(user) {\n        return this.dataService.addUser(user);\n    }\n\n    editUser(user) {\n        return this.dataService.editUser(user);\n    }\n\n    deleteUser(id) {\n        return this.dataService.deleteUser(id);\n    }\n}\n","export enum UserLevels {\r\n    USER = 1,\r\n    ADMIN = 2\r\n}","export class Comment {\r\n    id: number;\r\n    comment: string;\r\n    timestamp: Date;\r\n    userId: number;\r\n    gameId: number;\r\n    username?: string;\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { GameAuthor } from '../shared/models/game-author.model';\nimport { Game } from '../shared/models/game.model';\nimport { GameAuthorService } from '../shared/services/game-author.service';\n\n@Component({\n    selector: 'app-manage-game-authors',\n    templateUrl: './manage-game-authors.component.html',\n    styleUrls: ['./manage-game-authors.component.css']\n})\nexport class ManageGameAuthorsComponent implements OnInit {\n    gameAuthorsChangeSubject: BehaviorSubject<GameAuthor[]>;\n    gameAuthorsChangeSubscription: Subscription;\n    gameAuthors: GameAuthor[] = [];\n\n    constructor(private gameAuthorService: GameAuthorService) { }\n\n    ngOnInit() {\n        this.gameAuthorsChangeSubject = this.gameAuthorService.getGameAuthors();\n        this.gameAuthorsChangeSubscription = this.gameAuthorsChangeSubject\n            .subscribe((res: Game[]) => {\n                this.gameAuthors = res;\n            });\n    }\n\n    deleteGameAuthor(id) {\n        this.gameAuthorService.deleteGameAuthor(id);\n    }\n\n    ngOnDestroy() {\n        this.gameAuthorsChangeSubscription.unsubscribe();\n    }\n}\n","<div class=\"container\"\n    id=\"manageGameAuthorsContainer\">\n    <div id=\"actions\">\n        <h1>Welcome to game authors management!</h1>\n        <span>What would You like to do?</span>\n        <div id=\"buttonContainer\">\n            <button class=\"buttonGreen\" \n                routerLink=\"/addGameAuthor\">\n                Add new game author</button>\n            <button class=\"buttonRed\" \n                routerLink=\"/administration\">\n                Back to administration\n            </button>\n        </div>\n    </div>\n    <span class=\"errorText\" \n        id=\"errorSpan\"\n        *ngIf=\"gameAuthors.length == 0\">\n        No game authors to show.</span>\n    <div id=\"gameAuthors\">\n        <h2>Delete or edit game athors:</h2>\n        <table *ngIf=\"gameAuthors.length > 0\">\n            <tr *ngFor=\"let gameAuthor of gameAuthors\">\n                <td>{{gameAuthor.name}}</td>\n                <td class=\"buttonContainer\">\n                    <button class=\"buttonYellow\" \n                        [routerLink]=\"['/editGameAuthor', gameAuthor.id]\">\n                        <img src=\"../../assets/icons/edit.svg\" \n                            alt=\"Edit\" \n                            title=\"Edit\">\n                    </button>\n                </td>\n                <td class=\"buttonContainer\">\n                    <button class=\"buttonRed\" \n                        (click)=\"deleteGameAuthor(gameAuthor.id)\">\n                        <img src=\"../../assets/icons/delete.svg\" \n                            alt=\"Delete\"\n                            title=\"Delete\">\n                    </button>\n                </td>\n            </tr>\n        </table>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { Game } from '../shared/models/game.model';\nimport { GameService } from '../shared/services/game.service';\n\n@Component({\n    selector: 'app-manage-games',\n    templateUrl: './manage-games.component.html',\n    styleUrls: ['./manage-games.component.css']\n})\nexport class ManageGamesComponent implements OnInit {\n    gamesChangeSubject: BehaviorSubject<Game[]>;\n    gamesChangeSubscription: Subscription;\n    games: Game[] = [];\n\n    constructor(private gameService: GameService) { }\n\n    ngOnInit() {\n        this.gamesChangeSubject = this.gameService.getGames();\n        this.gamesChangeSubscription = this.gamesChangeSubject\n            .subscribe((res: Game[]) => {\n                this.games = res;\n            });\n    }\n\n    ngOnDestroy() {\n        this.gamesChangeSubscription.unsubscribe();\n    }\n}\n","<div class=\"container\"\n    id=\"manageGamesContainer\">\n    <div id=\"actions\">\n        <h1>Welcome to game management!</h1>\n\n        <span>What would You like to do?</span>\n        <div id=\"buttonContainer\">\n            <button class=\"buttonGreen\" \n                routerLink=\"/addGame\">\n                Add new game</button>\n            <button class=\"buttonRed\" \n                routerLink=\"/administration\">\n                Back to administration</button>\n        </div>\n    </div>\n    <div id=\"games\">\n        <h2>Delete or edit games:</h2>\n        \n        <span class=\"errorText\" \n            id=\"errorSpan\" \n            *ngIf=\"games.length == 0\">\n            No games to show.</span>\n        <div id=\"gamesContainer\" \n            *ngIf=\"games.length > 0\">\n            <ng-container *ngFor=\"let game of games\">\n                <app-game-tile \n                [game]=\"game\" \n                [editMode]=\"true\"\n                id=\"gameTile\"></app-game-tile>\n            </ng-container>\n        </div>\n    </div>\n</div>","import { FormGroup, ValidationErrors, ValidatorFn } from '@angular/forms';\r\n\r\nexport const passwordMismatchValidator: ValidatorFn = (control: FormGroup): ValidationErrors | null => {\r\n    const password = control.get(\"password\");\r\n    const repeatedPassword = control.get(\"repeatedPassword\");\r\n    \r\n    return password && repeatedPassword && password.value !== repeatedPassword.value ? { passwordMismatch: true } : null;\r\n};\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AddGameAuthorComponent } from './add-game-author/add-game-author.component';\r\nimport { AddGameComponent } from './add-game/add-game.component';\r\nimport { AdministrationComponent } from './administration/administration.component';\r\nimport { EditGameAuthorComponent } from './edit-game-author/edit-game-author.component';\r\nimport { EditGameComponent } from './edit-game/edit-game.component';\r\nimport { GameAuthorProfileComponent } from './game-author-profile/game-author-profile.component';\r\nimport { GameLibraryComponent } from './game-library/game-library.component';\r\nimport { GameProfileComponent } from './game-profile/game-profile.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { ManageGameAuthorsComponent } from './manage-game-authors/manage-game-authors.component';\r\nimport { ManageGamesComponent } from './manage-games/manage-games.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { RouteNotFoundComponent } from './route-not-found/route-not-found.component';\r\nimport { AdminGuard } from './shared/other/admin-guard';\r\nimport { AuthGuard } from './shared/other/auth-guard';\r\nimport { UserProfileComponent } from './user-profile/user-profile.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: \"login\",\r\n        component: LoginComponent\r\n    },\r\n    {\r\n        path: \"register\",\r\n        component: RegisterComponent\r\n    },\r\n    {\r\n        path: \"\",\r\n        component: HomeComponent,\r\n        canActivate: [AuthGuard],\r\n        children: [\r\n            { path: \"\", component: GameLibraryComponent, canActivate: [AuthGuard] },\r\n            { path: \"userProfile\", component: UserProfileComponent, canActivate: [AuthGuard] },\r\n            { path: \"gameProfile/:id\", component: GameProfileComponent, canActivate: [AuthGuard] },\r\n            { path: \"gameAuthorProfile/:id\", component: GameAuthorProfileComponent, canActivate: [AuthGuard] },\r\n            { path: \"administration\", component: AdministrationComponent, canActivate: [AuthGuard, AdminGuard] },\r\n            { path: \"manageGames\", component: ManageGamesComponent, canActivate: [AuthGuard, AdminGuard] },\r\n            { path: \"manageGameAuthors\", component: ManageGameAuthorsComponent, canActivate: [AuthGuard, AdminGuard] },\r\n            { path: \"addGame\", component: AddGameComponent, canActivate: [AuthGuard, AdminGuard] },\r\n            { path: \"editGame/:id\", component: EditGameComponent, canActivate: [AuthGuard, AdminGuard] },\r\n            { path: \"addGameAuthor\", component: AddGameAuthorComponent, canActivate: [AuthGuard, AdminGuard] },\r\n            { path: \"editGameAuthor/:id\", component: EditGameAuthorComponent, canActivate: [AuthGuard, AdminGuard] }\r\n        ]\r\n    },\r\n    {\r\n        path: \"routeNotFound\", \r\n        component: RouteNotFoundComponent\r\n    },\r\n    {\r\n        path: \"**\", \r\n        redirectTo: \"/routeNotFound\"\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes)],\r\n    exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from '../shared/services/auth.service';\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent implements OnInit {\n    authErrorSubscription: Subscription;\n    loginForm: FormGroup;\n    loginErrorMessage: string;\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private authService: AuthService) { }\n\n    ngOnInit() {\n        this.loginForm = this.formBuilder.group({\n            usernameInput: new FormControl(\"\", Validators.required),\n            passwordInput: new FormControl(\"\", Validators.required),\n        });\n\n        this.authErrorSubscription = this.authService.authErrorSubject\n            .subscribe((res: string) => {\n                this.loginErrorMessage = res;\n            });\n    }\n\n    get usernameInput() {\n        return this.loginForm.get('usernameInput');\n    }\n    get passwordInput() {\n        return this.loginForm.get('passwordInput');\n    }\n\n    isInputInvalid(input) {\n        return input.invalid && (input.dirty || input.touched);\n    }\n\n    onSubmit() {\n        if (this.loginForm.invalid) {\n            this.loginErrorMessage = 'Plesase enter all required data.';\n        } else {\n            this.authService.authenticateUser(\n                this.usernameInput.value,\n                this.passwordInput.value\n            );\n        }\n    }\n\n    ngOnDestroy() {\n        this.authErrorSubscription.unsubscribe();\n    }\n}\n","<div class=\"container\"\n    id=\"loginFormContainer\">\n    \n    <app-logo id=\"logo\"></app-logo>\n\n    <form [formGroup]=\"loginForm\" \n        (submit)=\"onSubmit()\"\n        id=\"loginForm\">\n\n        <h2>Login</h2>\n\n        <label for=\"usernameInput\">Username:</label>\n        <input type=\"text\" \n            name=\"usernameInput\"\n            placeholder=\"Username\"  \n            id=\"usernameInput\"\n            formControlName=\"usernameInput\"\n            [ngClass]=\"{'inputInvalid': isInputInvalid(usernameInput)}\">\n\n        <span class=\"errorText\" \n            *ngIf=\"isInputInvalid(usernameInput)\">\n            Username not entered.</span>\n\n        <label for=\"passwordInput\">Password:</label>\n        <input type=\"password\" \n            name=\"passwordInput\"\n            placeholder=\"Password\"\n            id=\"passwordInput\"\n            formControlName=\"passwordInput\"\n            [ngClass]=\"{'inputInvalid': isInputInvalid(passwordInput)}\">\n\n        <span class=\"errorText\" \n            *ngIf=\"isInputInvalid(passwordInput)\">\n            Password not entered.</span>\n\n        <div id=\"buttonContainer\">\n            <button type=\"submit\" \n                class=\"buttonGreen\">\n                Login</button>\n            <button type=\"button\" \n                class=\"buttonYellow\" \n                routerLink=\"/register\">\n                Register</button>\n        </div>\n\n        <span class=\"errorText\"\n            id=\"loginErrorMessage\" \n            *ngIf=\"loginErrorMessage\">\n            {{loginErrorMessage}}</span>\n    </form>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { GameAuthor } from '../shared/models/game-author.model';\nimport { GameAuthorService } from '../shared/services/game-author.service';\nimport { GameService } from '../shared/services/game.service';\n\n@Component({\n    selector: 'app-add-game',\n    templateUrl: './add-game.component.html',\n    styleUrls: ['./add-game.component.css']\n})\nexport class AddGameComponent implements OnInit {\n    addGameForm: FormGroup;\n    addGameErrorMessage: string;\n    gameAuthorsChangeSubject: BehaviorSubject<GameAuthor[]>;\n    gameAuthorsChangeSubscription: Subscription;\n    gameAuthors: GameAuthor[] = [];\n    image: any;\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private gameService: GameService,\n        private gameAuthorService: GameAuthorService,\n        private router: Router) { }\n\n    ngOnInit() {\n        this.addGameForm = this.formBuilder.group({\n            nameInput: new FormControl(\"\", Validators.required),\n            linkInput: new FormControl(\"\", Validators.required),\n            sourceLinkInput: new FormControl(\"\", Validators.required),\n            imageInput: new FormControl(\"\", Validators.required),\n            descriptionInput: new FormControl(\"\", Validators.required),\n            gameAuthorIdInput: new FormControl(\"\", Validators.required)\n        });\n\n        this.gameAuthorsChangeSubject = this.gameAuthorService.getGameAuthors();\n        this.gameAuthorsChangeSubscription = this.gameAuthorsChangeSubject\n            .subscribe((res: GameAuthor[]) => {\n                this.gameAuthors = res;\n            });\n    }\n\n    get nameInput() {\n        return this.addGameForm.get(\"nameInput\");\n    }\n\n    get linkInput() {\n        return this.addGameForm.get(\"linkInput\");\n    }\n\n    get sourceLinkInput() {\n        return this.addGameForm.get(\"sourceLinkInput\");\n    }\n\n    get imageInput() {\n        return this.addGameForm.get(\"imageInput\");\n    }\n\n    get descriptionInput() {\n        return this.addGameForm.get(\"descriptionInput\");\n    }\n\n    get gameAuthorIdInput() {\n        return this.addGameForm.get(\"gameAuthorIdInput\");\n    }\n\n    isInputInvalid(input) {\n        return input.invalid && (input.dirty || input.touched);\n    }\n\n    onFileChange(event) {\n        if (event.target.files.length > 0) {\n            this.image = event.target.files[0];\n        }\n    }\n\n    onSubmit() {\n        if (this.addGameForm.invalid) {\n            this.addGameErrorMessage = \"Plesase enter all required data.\";\n        } else {\n            let formData = new FormData();\n\n            formData.append(\"name\", this.nameInput.value);\n            formData.append(\"link\", this.linkInput.value);\n            formData.append(\"sourceLink\", this.sourceLinkInput.value);\n            formData.append(\"image\", this.image);\n            formData.append(\"description\", this.descriptionInput.value);\n            formData.append(\"gameAuthorId\", this.gameAuthorIdInput.value);\n            \n            this.gameService.addGame(formData);\n            this.router.navigate([\"/manageGames\"]);\n        }\n    }\n\n    ngOnDestroy() {\n        this.gameAuthorsChangeSubscription.unsubscribe();\n    }\n}\n","<div id=\"addGameFormContainer\">\n    <form [formGroup]=\"addGameForm\" \n        (submit)=\"onSubmit()\"\n        id=\"addGameForm\">\n\n        <h2>Add new game</h2>\n\n        <label for=\"nameInput\">Name:</label>\n        <input type=\"text\" \n            name=\"nameInput\"\n            placeholder=\"Name\"  \n            id=\"nameInput\"\n            formControlName=\"nameInput\"\n            [ngClass]=\"{'inputInvalid': isInputInvalid(nameInput)}\">\n        <span class=\"errorText\" \n            *ngIf=\"isInputInvalid(nameInput)\">\n            Game name not entered.</span>\n\n        <label for=\"linkInput\">Link:</label>\n        <input type=\"url\" \n            name=\"linkInput\"\n            placeholder=\"www.playablegame.com\"\n            id=\"linkInput\"\n            formControlName=\"linkInput\"\n            [ngClass]=\"{'inputInvalid': isInputInvalid(linkInput)}\">\n        <span class=\"descriptionText\">\n            Link to a playable instance of a game.</span> \n        <span class=\"errorText\" \n            *ngIf=\"isInputInvalid(linkInput)\">\n            Link not entered.</span>\n\n        <label for=\"sourceLinkInput\">Source link:</label>\n        <input type=\"url\" \n            name=\"sourceLinkInput\"\n            placeholder=\"www.gamesource.com\"\n            id=\"sourceLinkInput\"\n            formControlName=\"sourceLinkInput\"\n            [ngClass]=\"{'inputInvalid': isInputInvalid(sourceLinkInput)}\">\n        <span class=\"descriptionText\">\n            Link to a repository containing game source code.</span> \n        <span class=\"errorText\" \n            *ngIf=\"isInputInvalid(sourceLinkInput)\">\n            Source link not entered.</span>\n\n        <label for=\"imageInput\">Image:</label>\n        <input type=\"file\" \n            name=\"imageInput\"\n            id=\"imageInput\"\n            formControlName=\"imageInput\"\n            (change)=\"onFileChange($event)\"\n            [ngClass]=\"{'inputInvalid': isInputInvalid(imageInput)}\">\n        <span class=\"errorText\" \n            *ngIf=\"isInputInvalid(imageInput)\">\n            Game image not selected.</span>\n\n        <label for=\"descriptionInput\">Description:</label>\n        <textarea name=\"descriptionInput\" \n            id=\"descriptionInput\" \n            cols=\"30\"\n            rows=\"5\"\n            formControlName=\"descriptionInput\"\n            [ngClass]=\"{'inputInvalid': isInputInvalid(descriptionInput)}\">Description</textarea>\n        <span class=\"errorText\" \n            *ngIf=\"isInputInvalid(descriptionInput)\">\n            Description not entered.</span>\n\n        <label for=\"gameAuthorIdInput\">Game author:</label>\n        <select name=\"gameAuthorIdInput\" \n            id=\"gameAuthorIdInput\"\n            formControlName=\"gameAuthorIdInput\">\n            <option *ngFor=\"let gameAuthor of gameAuthors\" \n                [value]=\"gameAuthor.id\">{{gameAuthor.name}}</option>\n        </select>\n        <span class=\"descriptionText\">\n            If game author is not available, add new game author on the administration page.</span> \n        <span class=\"errorText\" \n            *ngIf=\"isInputInvalid(gameAuthorIdInput)\">\n            Game author not selected.</span>\n\n        <div id=\"buttonContainer\">\n            <button type=\"submit\" \n                class=\"buttonBlue\" \n                (click)=\"onSubmit()\">\n                Add game</button>\n            <button type=\"button\" \n                class=\"buttonRed\" \n                routerLink=\"/manageGames\">\n                Cancel</button>\n        </div>\n\n        <span class=\"errorText\"\n            id=\"addGameErrorMessage\" \n            *ngIf=\"addGameErrorMessage\">\n            {{addGameErrorMessage}}</span>\n    </form>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-logo',\n    templateUrl: './logo.component.html',\n    styleUrls: ['./logo.component.css']\n})\nexport class LogoComponent implements OnInit {\n    constructor() { }\n    ngOnInit() { }\n}\n","<a routerLink=\"/\" id=\"logo\">\n    <img src=\"../../assets/images/logo.png\" \n        alt=\"ngArcade\"\n        id=\"logoImage\">\n</a>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}